- hosts: all
  become: yes
  tasks:
    - name: Set kernel parameters
      shell:
        cmd: |
          cat <<EOF | sudo tee /etc/modules-load.d/containerd.conf
          overlay
          br_netfilter
          EOF
          sudo modprobe overlay
          sudo modprobe br_netfilter
          cat <<EOF | sudo tee /etc/sysctl.d/99-kubernetes-k8s.conf
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          EOF
          sudo sysctl --system >> kernel_parameter.txt
        chdir: /home/parallels
        creates: kernel_parameter.txt

    - name: Install containerd
      apt:
        name: "containerd"
        state: present
        update_cache: true

    - name: Configure Containerd
      shell:
        cmd: |
          containerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1
          touch containerd_configured.txt
        chdir: /home/parallels
        creates: containerd_configured.txt

    - name: Update Containerd config.toml file
      lineinfile:
        path: /etc/containerd/config.toml
        state: present
        firstmatch: true
        insertafter: '\boptions\b'
        line: '            SystemdCgroup = true'

    - name: Restart and Enable Containerd
      shell: |
        sudo systemctl restart containerd
        sudo systemctl enable containerd
        touch containerd_restarted.txt
      chdir: /home/parallels
      creates: containerd_restarted.txt

    - name: Install required packaged
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - gnupg
        - gnupg2
        - curl
        - software-properties-common

    - name: Install gpg key
      shell:
        cmd: |
          curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmour -o /etc/apt/trusted.gpg.d/cgoogle.gpg
          touch gpg_key_set.txt
        chdir: /home/parallels
        creates: gpg_key_set.txt

    - name: add Kubernetes APT repository
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        state: present

    - name: Install Kubernetes Components
      apt:
        name: '{{ item }}'
        state: present
        update_cache: true
      loop:
        - kubelet
        - kubeadm
        - kubectl
